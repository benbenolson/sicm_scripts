===== GETTING INTO NUMA MODE =====

1. Change the memory to "1LM" mode in the BIOS.
2. Boot into a new enough kernel (5.1+).
3. Ensure that you have the `kmem` kernel module for that kernel.
4. Use `daxctl` (I got it from the `ndctl` Github repo):
   
   daxctl migrate-device-model

5. This command should write the following lines to `/etc/modprobe.d/daxctl.conf`:

   blacklist dax_pmem_compat
   alias nd:t7* dax_pmem

   That's all the command should do, so instead of running the command, you can just
   add those lines to that file.

6. Use `ipmctl` to bind the DIMMs that you want to use to AppDirect mode. I just
   bound all of the NVDIMMs on NUMA node 0:

   ipmctl create -goal -socket 0 PersistentMemoryType=AppDirect

7. This command will require a reboot to take effect. Do that now.
8. With no namespaces already defined, (check `ndctl list`), do:

   ndctl create-namespace -m dax

   This will put the DIMMs that you added to your memory goal (in Step 6) into a 
   namespace with the proper driver. If you have multiple regions, you can specify
   a region by looking at the output of:

   ndctl list -R

   Choosing a region, and then specifying it with:

   ndctl create-namespace --region region0 -m dax
   ndctl create-namespace --region region1 -m dax

9. Ensure that the `kmem` module is running:

   modprobe kmem

10. Ensure that `dax_pmem_compat` is *not* running (presumably because of Step 5's 
    blacklist):

    rmmod dax_pmem_compat

11. Unbind the namespace from the normal DAX kernel driver:

    echo dax0.0 > /sys/bus/dax/drivers/device_dax/unbind

    If that file doesn't exist, you likely haven't run that `daxctl` command,
    so you don't have the old `/sys/bus` interface. Run that command (or just do
    Step 5) and reboot. It may also say that the device doesn't exist. If it does,
    then most likely the Step 8 command didn't assign the name `dax0.0` to your
    DAX device. Try doing a `ndctl list` and see what the new device name is.

12. Bind the device to the `kmem` kernel module:

    echo dax0.0 > /sys/bus/dax/drivers/kmem/new_id

13. Assuming those last two commands succeeded, you're done. Check `numastat -m`,
    and you should see an additional NUMA node with the memory that you've assigned
    to it.

14. Any more issues, and you should consult:

    https://lwn.net/ml/linux-kernel/20190225185727.BCBD768C@viggo.jf.intel.com/
    https://lwn.net/ml/linux-kernel/20190225185740.8660866F@viggo.jf.intel.com/

===== GETTING BACK INTO MEMORY MODE =====

1. Change the memory to "2LM" mode in the BIOS.
2. Disable and destroy all namspaces:

   ndctl list -N
   ndctl disable-namespace namespace0.0
   ndctl destroy-namespace namespace0.0

3. Disable all regions:
   
   ndctl list -R
   ndctl disable-region region0
   ndctl disable-region region1

4. Put all of each socket's memory in Memory Mode:

   ipmctl create -goal -socket 0 MemoryMode=100
   ipmctl create -goal -socket 1 MemoryMode=100

5. Reboot.
